var gameContainer = Class.create(
    {
        init: function (width, height, canvas, img, playerType)
        {
            this._super.init(width, height, canvas, 0)
            this._gameEnded = false;
            this._leftKeyPressed = false;
            this._rightKeyPressed = false;
            this._actionKeyPressed = false;
            this._reflected = false;

            var floor = new Floor(0, 230, this._super.width, 20, this._super._canvas, "rgb(255,255,255)");


            this._super.addUiElement(floor)

            var self = this;

            this._risingSpeed = 0;

            this._gameMethod = setInterval(function () { myTimer() }, 4);

            //this._dificultyRise = setInterval(function () { increaseDifficulty() }, 1000);

            this._player= new Player(100, 100, 40, 40, this._super._canvas, playerType);


            function myTimer()
            {
                //increaseDifficulty();
                self.movePlayer();
                self.moveObjects();
                self.redraw();
            }

            function increaseDifficulty() {


                //self.moveObjects();

                self._risingSpeed+=0.00001;
            }
        },

        addNewFloor: function () {

            var randomWidth = Math.floor(Math.random() * this._super.width / 2);

            var randomXposition = Math.floor(Math.random() * (this._super.width - randomWidth));

            var floor = new Floor(randomXposition, 0, randomWidth, 20, this._super._canvas, "rgb(255,255,255)");

            this._super.addUiElement(floor);
        },

        redraw: function ()
        {
            
            if (this._gameEnded)
            {
                alert("ended");
                //drawEndGame(this._super._canvas);
            }
            else
            {
                this._super.redraw();
            }
            this._player.draw();
        },

        moveObjects: function ()
        {
            var runInOffset = 0;
            if (this._player._super._super.positionY <= 100)
            {
                runInOffset = 100 - this._player._super._super.positionY;
                this._player._super._super.positionY += runInOffset;
            }
            //console.log(this._player._super._super.positionY);
            //console.log(this._risingSpeed);
            //console.log(runInOffset);
            for (var element in this._super._uiElements)
            {
                if (this._super._uiElements[element] instanceof gameObject)
                {
                    this._super._uiElements[element]._super._super.positionY += this._risingSpeed + runInOffset;
                }
                
            }
        },

        movePlayer: function()
        {
            var hasSteppedOnFloor = false;
            if (this._leftKeyPressed)
            {
                this._player._speedX -= 0.2;
                if (this._player._speedX < -5)
                {
                    this._player._speedX = -3;
                }
            }

            else if (this._rightKeyPressed)
            {
                this._player._speedX += 0.2;
                if (this._player._speedX > 5)
                {
                    this._player._speedX = 3;
                }
            }
            else
            {
                if (Math.abs(this._player._speedX) > 0 && Math.abs(this._player._speedX) < 1)
                {
                    this._player._speedX=0;
                }
                else if (this._player._speedX > 0)
                {
                    this._player._speedX -= 0.2;
                }
                else if (this._player._speedX < 0)
                {
                    this._player._speedX += 0.2;
                }
            }

            // We don't need to check if the player has stepped on
            // a new floor while he's still going upwards --> fix to the infinite jump bug
            if (this._player._speedY >= 0 || this._player._speedX != 0) {
                for (var element in this._super._uiElements) {
                    if (this._super._uiElements[element] instanceof gameObject) 
                    {
                        var elementYPosition = this._super._uiElements[element]._super._super.positionY;
                        var elementXPosition = this._super._uiElements[element]._super._super.positionX;
                        var elementWidth = this._super._uiElements[element]._super._super.width;
                        var playerYPosition = this._player._super._super.positionY;
                        var playerXPosition = this._player._super._super.positionX;
                        var playerWidth = this._player._super._super.width;

                        if (Math.abs(elementYPosition - (playerYPosition + 100)) <= 5 &&
                            playerXPosition + playerWidth >= elementXPosition &&
                            playerXPosition + playerWidth <= elementXPosition + elementWidth)
                        {
                            hasSteppedOnFloor = true;
                            self._actionKeyPressed = false;

                            if (this._player.previousYPosition < playerYPosition) {
                                this._player.previousYPosition = playerYPosition;
                                this.addNewFloor();
                            }
                            break;

                        }
                    }
                }
            }

            //console.log(this._player._speedY+" "+ hasSteppedOnFloor);
            if (!hasSteppedOnFloor || this._player._speedY <= 0)
            {
                //initiate dummy gravity
                this._player._super._super.positionY += this._player._speedY;
                if (!hasSteppedOnFloor) {
                    this._player._speedY += 0.2;
                    if (this._player._speedY > 5) {
                        this._player._speedY = 5;
                    }
                }
            }
            else
            {
                this._player._speedY = 0;
            }

            // Partial collision fix - must get rid of "magic" number 10
            // I don't what's the reason for that 10 pixel difference
            if (this._player._super._super.positionX + this._player._speedX >= - 10 &&
                this._player._super._super.positionX + this._player._speedX <=
                this._super.width - this._player._super._super.width * 2 - 10
                )
            {
                this._player._super._super.positionX += this._player._speedX;
            }
            else
            {
                this._player._speedX *= -1;
            }

        },


        handleKeyDown: function (e)
        {
            if (e.keyCode==39)
            {
                this._rightKeyPressed = true;
            }
            if (e.keyCode == 37) {
                this._leftKeyPressed = true;
            }
            
        },

        handleKeyUp: function (e) {
            if (e.keyCode == 39) {
                this._rightKeyPressed = false;
            }
            if (e.keyCode == 37) {
                this._leftKeyPressed = false;
                
            }
            //alert(e.keyCode);
        },

        handleKeyPress: function (evt)
        {
            if (!self._actionKeyPressed) {
                var k = evt ? evt.which : window.event.keyCode;
                //alert(k);
                if (k == 32) {
                    this._player._speedY = -10;
                }
                self._actionKeyPressed = true;
            }
        }

       
    });


gameContainer.inherit(Container);